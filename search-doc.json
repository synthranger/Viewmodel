[{"title":"Getting Started","type":0,"sectionRef":"#","url":"docs/intro","content":"","keywords":""},{"title":"Installation​","type":1,"pageTitle":"Getting Started","url":"docs/intro#installation","content":""},{"title":"Via Wally​","type":1,"pageTitle":"Getting Started","url":"docs/intro#via-wally","content":"Viewmodel = &quot;synthranger/viewmodel@0.1.0&quot; Copy "},{"title":"Manual Installation​","type":1,"pageTitle":"Getting Started","url":"docs/intro#manual-installation","content":"Just paste src/init.lua into your project and rename it as Viewmodel and you're done! "},{"title":"Example Usage​","type":1,"pageTitle":"Getting Started","url":"docs/intro#example-usage","content":"For a full example, check out the samples folder in the repo. local Viewmodel = require(path.to.Viewmodel) local newVM = Viewmodel.new(viewmodelInstance, { AnimateCamera = true; UseCharacterShirt = true; LeftArmColor = nil; RightArmColor = nil; }) RunService.RenderStepped:Connect(function(dt) newVM:Update(dt, Camera.CFrame) end) newVM:Cull(true) -- hides viewmodel from Camera task.wait(1) newVM:Cull(false) newVM:LoadAnimation(&quot;Wave&quot;, waveAnim):Play() -- :LoadAnimation() returns the loaded AnimationTrack newVM:GetAnimation(&quot;Wave&quot;):Stop() task.wait(5) newVM:UnloadAnimation(&quot;Wave&quot;) Copy "},{"title":"Viewmodel","type":0,"sectionRef":"#","url":"api/Viewmodel","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Viewmodel","url":"api/Viewmodel#types","content":" "},{"title":"ViewmodelSettings​","type":1,"pageTitle":"Viewmodel","url":"api/Viewmodel#ViewmodelSettings","content":"&lt;/&gt; interface ViewmodelSettings { AnimateCamera: boolean-- Animates FakeCamera movement to Camera if set to true UseCharacterShirt: boolean-- Self explanatory LeftArmColor: Color3? -- Set as nil for default RightArmColor: Color3? -- Set as nil for default } All settings inside ViewmodelSettings can be changed at run time to your liking. "},{"title":"Properties​","type":1,"pageTitle":"Viewmodel","url":"api/Viewmodel#properties","content":" "},{"title":"Settings​","type":1,"pageTitle":"Viewmodel","url":"api/Viewmodel#Settings","content":"&lt;/&gt; Viewmodel.Settings: ViewmodelSettings The Settings of the Viewmodel.  "},{"title":"Instance​","type":1,"pageTitle":"Viewmodel","url":"api/Viewmodel#Instance","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Viewmodel.Instance: Model  The actual instance of the Viewmodel.  "},{"title":"Animator​","type":1,"pageTitle":"Viewmodel","url":"api/Viewmodel#Animator","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Viewmodel.Animator: Animator  The animator of the Viewmodel instance.  "},{"title":"Culled​","type":1,"pageTitle":"Viewmodel","url":"api/Viewmodel#Culled","content":"&lt;/&gt; Viewmodel.Culled: boolean Determines if the Viewmodel should be visible to the Camera or not. If set to true the Viewmodel will be sent to the internal constant CULL_CFRAME. "},{"title":"Functions​","type":1,"pageTitle":"Viewmodel","url":"api/Viewmodel#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Viewmodel","url":"api/Viewmodel#new","content":"&lt;/&gt; Viewmodel.new( viewmodelInstance: Model , viewmodelSettings: ViewmodelSettings ) → Viewmodel Constructor of the Class. If viewmodelSettings is not provided, it will look for Settings inside viewmodelInstance.  "},{"title":"Cull​","type":1,"pageTitle":"Viewmodel","url":"api/Viewmodel#Cull","content":"&lt;/&gt; Viewmodel:Cull(state: boolean) → void Sets the Culled property of the Viewmodel to the first argument.  "},{"title":"LoadAnimation​","type":1,"pageTitle":"Viewmodel","url":"api/Viewmodel#LoadAnimation","content":"&lt;/&gt; Viewmodel:LoadAnimation( key: string, animation: Animation ) → AnimationTrack  Loads the given animation into the Viewmodel's Animator.  "},{"title":"GetAnimation​","type":1,"pageTitle":"Viewmodel","url":"api/Viewmodel#GetAnimation","content":"&lt;/&gt; Viewmodel:GetAnimation(key: string) → AnimationTrack?  Retrieves the AnimationTrack that is assigned to the given key.  "},{"title":"UnloadAnimation​","type":1,"pageTitle":"Viewmodel","url":"api/Viewmodel#UnloadAnimation","content":"&lt;/&gt; Viewmodel:UnloadAnimation(key: string) → void Unloads the AnimationTrack from the Viewmodel's Animator.  "},{"title":"Update​","type":1,"pageTitle":"Viewmodel","url":"api/Viewmodel#Update","content":"&lt;/&gt; Viewmodel:Update( deltaTime: number, viewmodelCFrame: CFrame ) → void Updater function of the viewmodel, must be run every RenderStep. "}]